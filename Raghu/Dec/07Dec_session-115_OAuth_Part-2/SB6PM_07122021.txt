				  Date : 07-12-2021
				   Spring Boot 6PM
				    Mr. RAGHU
	-----------------------------------------------------------------------
			Open Authorization (OAuth 2.x)

Stage#1 Register Client Application (your project) with Auth and Resource Server (Facebook)

*) On successful register client application gets clientId and secret
   it is something like username and password of project.

*) onetime process, clientid and secret are generated by auth server, manual provide
   is not possible.

Stage#2 Register EndUser with Resource server and update profile details

Stage#3 Request Client + EndUser to Auth and Resource server for Access Token.

=====================================================================================
*) ClientId and Scret generation using Facebook
1. Goto https://developers.facebook.com/
2. Login If not done (top right corner)
3. Click on MyApps (top right corner)
4. Click on Create App
5. Choose Consumer > Next button
6. Enter display name > Create App > Enter pwd
7. Click on Settings and Basic
8. Click on Show > Copy Clientid and Secret.

client Id: 379163557232221
client secret: 653905c58336109167b0dd25a558859f


*) ClientId and Scret generation using Google
*) ClientId and Scret generation using Github

=======coding steps==================================================================
1. Create Project
Name : SpringSecurityOAuthEx
Dep  : Spring Web, Spring Security, OAuth2 Client, Devtools.

2. RestController
package in.nareshit.raghu.rest;

import java.security.Principal;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class UserRestController {

	@GetMapping("/all")
	public String showAll() {
		return "Welcome to All!";
	}
	
	@GetMapping("/data")
	public String showData() {
		return "Welcome to Login user only!";
	}
	
	@GetMapping("/info")
	public Authentication showUser(Principal p) {
		System.out.println(p.getClass().getName());
		return SecurityContextHolder.getContext().getAuthentication();
	}
	
}

3. Security Config
package in.nareshit.raghu.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

	
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		//InMemory/Jdbc/UserDetailsService
		auth.inMemoryAuthentication().withUser("sam").password("{noop}sam").authorities("ADMIN");
	}

	protected void configure(HttpSecurity http) throws Exception {
		http.authorizeRequests()
		.antMatchers("/all","/login").permitAll()
		.anyRequest().authenticated()
		.and().formLogin()
		.and().oauth2Login()
		.and().csrf().disable() //must be disabled
		;
		
	}
}

4. application.yml
spring:
  application:
    name: OAUTH-LOGIN
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 441254650715180
            client-secret: b38161e961877d1ef20c52a35963e14a


5. Run App and Enter URL
http://localhost:8080/all
http://localhost:8080/login
after login:
http://localhost:8080/info
http://localhost:8080/logout


				Date : 19-Jul-21
				Spring Boot 6:30PM
				  Mr. RAGHU
		----------------------------------------------------
PDFs Link
https://www.mediafire.com/file/w5x9w5vcmkwkkdv/RaghuSirNareshITJavaPdfs.zip/file
Git Repository
https://github.com/javabyraghu?tab=repositories


			       Spring Boot Data JPA

a. API Specification : API Provider [1st party] -- Sun/Oracle

b. API Users / Applications [2nd Party] -- Programmers

c. API Implementation / Vendors (3rd party)

*) Use of this design (1st Party/2nd Party/3rd Party) is - 'Applications
    code remains same if we move from one vendor to another vendor,
     Only configurations, jars, inputs may get modified.'
-------------------------------------------------------------------------------
=> ORM : Object Relational Mapping : it is theory, it says perform all
           Database Operations using OOPs concept. SQL Query need not to
	   define by programmer.[Generated by ORM Framework]

=> Sun/Oracle has provided JPA : Java Persistency API (1st Party) 
          -- It follows ORM Concept.

API Documentation Link:
https://docs.oracle.com/javaee/7/api/javax/persistence/package-summary.html

Package name : javax.persistence

=> We can develop Java Application which communicates with database to
   perform operations : INSERT, UPDATE, DELETE and SELECT..etc
    Our Apps are called as 2nd party.

=> Here, we need Jars that contains Impl classes for 1st party(ie 3rd party).
   we are using JBoss Hibernate JARS. 

====(ORM Properties)===========================================================
a. dialect : It is a pre-defined class, it will generate SQL queries
		when we perform Database Operations.

*) SQL queries are Database Dependent. ie SQL1 working for Oracle DB,
    may or may not work for other DBs.

API Link:-
https://docs.jboss.org/hibernate/orm/5.0/javadocs/org/hibernate/dialect/package-summary.html

Oracle:
  create table student(sid number, sname varchar2(20), sfee number(10,3));

MySQL:
  create table student(sid int, sname varchar(20), sfee double);

=> So, dialects is Database Specific. 
		All these exist in package: org.hibernate.dialect
 Oracle -- OracleDialect
 MySQL  -- MySQLDialect
 ..etc

Q) in Oracle10g, Oracle9i and Oracle 12c.
   What is g, i and c?
A)
   g-Grid/Generation, i- internet, c-cloud.
--------------------------------------------------
b. show_sql : (boolean - default is FALSE)

=> To display Generated SQL at console/log file , 
    set  show_sql = true
--------------------------------------------------
c. hbm2ddl.auto :- Used for indication of Schema Creation.
       It has 4 possible values.

    I. create  : On App start up, creates new table
		(if old tables exist drop them)

   II. update  : Creates tables if not exist
		(if old tables exist use them)

  III. validate:(default) Programmer has to create/modify/drop tables

   IV. create-drop:  drop old tables -- create new tables 
                             --- app stop --drop all tables
=======================================================================

